##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [4.3.0-B58] date: [Tue Apr 23 16:53:47 EDT 2024] 
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

# Commmand line arguments
# MCU_FAMILY=F3


######################################
# target
######################################
# Notes: MCU_MODEL should match the prepocessor definition e.g. STM32F303xE
# MCU_FAM should match as used in the HAL driver paths e.g. STM32F3xx
# default family
MCU_FAMILY ?= F3
ifeq ($(MCU_FAMILY),C0)
	MCU_FAMILY_L = $(shell echo $(MCU_FAMILY) | tr A-Z a-z)
	MCU_FAM_FULL = STM32$(MCU_FAMILY)xx
	MCU_MODEL = C011x6 # TODO update to match HAL CDEfines / cubemx
	MCU_CDEFINES = STM32$(MCU_MODEL)
	MCU_SPEC = cortex-m0
	# MCU_ASM_SOURCES = startup_stm32f303xe.s
	# OPENOCD_TARGET_CFG = stm32f3x.cfg
	# MCU_LDSCRIPT = STM32F303RETx_FLASH.ld
else ifeq ($(MCU_FAMILY),F3)
	MCU_FAMILY_L = $(shell echo $(MCU_FAMILY) | tr A-Z a-z)
	MCU_FAM_FULL = STM32$(MCU_FAMILY)xx
	MCU_MODEL = F303xE
	MCU_CDEFINES = STM32$(MCU_MODEL)
	MCU_SPEC = cortex-m4
	MCU_ASM_SOURCES = startup_stm32f303xe.s
	OPENOCD_TARGET_CFG = stm32f3x.cfg
	MCU_LDSCRIPT = STM32F303RETx_FLASH.ld
else
  $(error Unsupported MCU_FAMILY: $(MCU_FAMILY))
endif


TARGET = target_$(MCU_MODEL)

######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build/$(MCU_FAM_FULL)

######################################
# source
######################################
# C sources
C_SOURCES =  \
Core/Src/main.c \
Core/Src/stm32$(MCU_FAMILY_L)xx_it.c \
Core/Src/stm32$(MCU_FAMILY_L)xx_hal_msp.c \
Drivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Src/stm32$(MCU_FAMILY_L)xx_hal_tim.c \
Drivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Src/stm32$(MCU_FAMILY_L)xx_hal_tim_ex.c \
Drivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Src/stm32$(MCU_FAMILY_L)xx_hal_uart.c \
Drivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Src/stm32$(MCU_FAMILY_L)xx_hal_uart_ex.c \
Drivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Src/stm32$(MCU_FAMILY_L)xx_hal.c \
Drivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Src/stm32$(MCU_FAMILY_L)xx_hal_rcc.c \
Drivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Src/stm32$(MCU_FAMILY_L)xx_hal_rcc_ex.c \
Drivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Src/stm32$(MCU_FAMILY_L)xx_hal_gpio.c \
Drivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Src/stm32$(MCU_FAMILY_L)xx_hal_dma.c \
Drivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Src/stm32$(MCU_FAMILY_L)xx_hal_cortex.c \
Drivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Src/stm32$(MCU_FAMILY_L)xx_hal_pwr.c \
Drivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Src/stm32$(MCU_FAMILY_L)xx_hal_pwr_ex.c \
Drivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Src/stm32$(MCU_FAMILY_L)xx_hal_flash.c \
Drivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Src/stm32$(MCU_FAMILY_L)xx_hal_flash_ex.c \
Drivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Src/stm32$(MCU_FAMILY_L)xx_hal_i2c.c \
Drivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Src/stm32$(MCU_FAMILY_L)xx_hal_i2c_ex.c \
Drivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Src/stm32$(MCU_FAMILY_L)xx_hal_exti.c \
Core/Src/system_stm32$(MCU_FAMILY_L)xx.c \
Core/Src/sysmem.c \
Core/Src/syscalls.c \
Core/Src/gpio.c \
Core/Src/usart.c \
ThirdParty/tm1637/tm1637.c

# ASM sources
ASM_SOURCES =  \
$(MCU_ASM_SOURCES)

# ASM sources
ASMM_SOURCES = 

#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S

 
#######################################
# CFLAGS
#######################################
CPU = -mcpu=$(MCU_SPEC)

# Update FPU and FLOAT-ABI only for Cortex-M4
ifeq ($(MCU_SPEC),cortex-m4)
  FPU = -mfpu=fpv4-sp-d16
  FLOAT-ABI = -mfloat-abi=hard
else
  FPU =
  FLOAT-ABI = -mfloat-abi=soft
endif

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-D$(MCU_CDEFINES)


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-ICore/Inc \
-IDrivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Inc \
-IDrivers/STM32$(MCU_FAMILY)xx_HAL_Driver/Inc/Legacy \
-IDrivers/CMSIS/Device/ST/STM32$(MCU_FAMILY)xx/Include \
-IDrivers/CMSIS/Include \
-IThirdParty/tm1637


# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS += $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = $(MCU_LDSCRIPT)

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections


# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASMM_SOURCES:.S=.o)))
vpath %.S $(sort $(dir $(ASMM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@
$(BUILD_DIR)/%.o: %.S Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# get version
#######################################
version:
	@echo "Using GCC version at:"
	@echo "\t$$(which $(CC))"
	@echo "GCC version:"
	@$(CC) --version | sed 's/^/\t/'


#######################################
# get config
#######################################
config:
	@echo "Current configuration:"
	@echo "MCU Family: $(MCU_FAMILY)"
	@echo "MCU Family (lowercase): $(MCU_FAM_L)"
	@echo "MCU Model: $(MCU_MODEL)"
	@echo "MCU Spec: $(MCU_SPEC)"
	@echo "OpenOCD Target Config: target/$(OPENOCD_TARGET_CFG)"

#######################################
# flash via openocd
#######################################
flash: all
	openocd -f interface/stlink.cfg -f target/$(OPENOCD_TARGET_CFG) -c "program $(BUILD_DIR)/$(TARGET).elf verify reset exit"

# TODO print info on mcu being used


#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***
